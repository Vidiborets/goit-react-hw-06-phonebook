{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactFilter/ContactFilter.module.scss","components/ContactStats/ContactStats.module.scss","App.module.scss","components/Container/Container.module.scss","components/Section/Section.module.scss","components/Container/Container.jsx","redux/actions.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","components/Section/Section.jsx","components/ContactStats/ContactStats.jsx","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.scss"],"names":["module","exports","Container","children","className","s","container","defaultProps","protoTypes","PropTypes","node","addContacts","createAction","text","payload","id","shortid","generate","deleteContacts","changeFilter","connect","dispatch","onSubmit","name","number","contactActions","useState","setName","setNumber","handleChange","e","currentTarget","value","resetForm","form","preventDefault","type","onChange","input","placeholder","pattern","title","required","mask","maskChar","button","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","state","contacts","onDeleteContact","actions","list","map","itemList","contactName","contactNumber","href","contactDelete","onClick","ContactFilter","label","target","Section","section","total","length","titleContact","App","createReducer","contact","_","phonebookReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","querySelector"],"mappings":"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","file":"static/js/main.c5262ede.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"input\":\"ContactForm_input__3emgF\",\"button\":\"ContactForm_button__1007G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__2XO6r\",\"input\":\"ContactFilter_input__8Aypf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactStats_title__14kdM\",\"titleContact\":\"ContactStats_titleContact__2WT7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2oBiX\",\"titleContact\":\"App_titleContact__1tdh3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eZVY\",\"title\":\"Container_title__58Tg5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2mYr1\"};","\n\nimport PropTypes from 'prop-types';\nimport s from './Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.protoTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","\nimport shortid from 'shortid'\nimport { createAction } from '@reduxjs/toolkit'\n\n\nconst addContacts = createAction('contacts/add',text=>({\n        payload:{\n            id:shortid.generate(),\n        ...text\n        }\n}))\n\n\nconst deleteContacts = createAction('contacts/delete')\n\nconst changeFilter = createAction('contacts/changeFilter')\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContacts, deleteContacts, changeFilter}","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.scss'\nimport contactActions from '../../redux/actions'\nimport InputMask from 'react-input-mask';\n\n\nfunction ContactForm({ onSubmit }) {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n\n    const handleChange = e => {\n        const { name, value } = e.currentTarget;\n\n        \n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({ name,number });\n        resetForm();\n    }\n\n    const resetForm = () => {\n        setNumber('')\n        setName('')\n    }\n    return (\n        <form className={s.form} onSubmit={handleSubmit}>\n            <label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                    className={s.input}\n                    placeholder={'Имя'}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                />\n            </label>\n            <label>\n                <InputMask\n                    mask=\"+38099999999\"\n                    maskChar=\" \"\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChange}\n                    className={s.input}\n                    placeholder={'Номер'}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                ></InputMask>\n            </label>\n            <button className={s.button} type=\"submit\">Добавить контакт</button>\n        </form>\n    );\n}\nconst mapDispatchToProp= dispatch =>({\n    onSubmit:(name,number)=>dispatch(contactActions.addContacts(name,number))\n})\n\nexport default connect(null,mapDispatchToProp)(ContactForm)\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n\n","import { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport s from './ContactList.module.scss'\nimport actions from '../../redux/actions'\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n    return (\n        <ul className={s.list}>\n            {contacts.map(({name,number,id}) => (\n                  <li className={s.itemList} key={id}>\n                  <span className={s.contactName}>{name}</span>\n                  <a className={s.contactNumber} href={`tel:${number}`}>{number}</a>\n                  <button className={s.contactDelete} type=\"button\" onClick={() => onDeleteContact(id)}>Удалить</button>\n              </li>\n            ))}\n       </ul>\n  )  \n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n    \n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nconst getVisibleContacts = (allContacts,filter)=>{\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({name})=>\n    name.toLowerCase().includes(normalizedFilter)\n  )\n}\nconst mapStateToProps = state =>({\n  contacts:getVisibleContacts(state.contacts.contacts , state.contacts.filter)\n})\n\nconst mapDispatchToProp = dispatch=>({\n  onDeleteContact:id=>dispatch(actions.deleteContacts(id))\n})\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProp)(ContactList)","import PropTypes from 'prop-types'\nimport s from './ContactFilter.module.scss'\nimport { connect } from 'react-redux'\nimport actions from '../../redux/actions'\n\nconst ContactFilter = ({ value, onChange }) => {\n    return (\n        <label className={s.label}>\n            <input\n                type=\"text\"\n                name=\"name\"\n                value={value}\n                onChange={onChange}\n                className={s.input}\n                placeholder={'Поиск контактов'}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n            />\n        </label>\n    )\n}\n\nContactFilter.defaultProps = {\n  value: '',\n};\n\nContactFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nconst mapDispatchToProp = dispatch=>({\n  onChange: (e)=>dispatch(actions.changeFilter(e.target.value))\n})\n\nconst mapStateToProps=(state)=>({\n   value:state.contacts.filter\n})\n\nexport default connect(mapStateToProps,mapDispatchToProp)(ContactFilter)\n","import PropTypes from 'prop-types';\nimport s from './Section.module.scss';\n\nconst Section = ({ children }) => (\n  <div className={s.section}>{children}</div>\n);\n\nSection.defaultProps = {\n  children: [],\n};\n\nSection.protoTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;","import { connect } from \"react-redux\";\nimport React from \"react\";\nimport s from './ContactStats.module.scss'\n\n\nconst ContactStats = ({total})=>{\n    return(\n            <>\n                <h2 className={s.title}>Общее кол-во контактов</h2>\n                <span className={s.titleContact}>{total}</span>\n            </>\n    )\n}\n\nconst mapStateToProps = state =>({\n    total:state.contacts.contacts.length,\n})\n\n\nexport default connect(mapStateToProps)(ContactStats)","import Container from './components/Container'\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList'\nimport ContactFilter from './components/ContactFilter'\nimport Section from './components/Section'\nimport ContactStats from './components/ContactStats'\nimport s from './App.module.scss'\n\n\n\n\n\n\n\n\nexport default function App() {\n\n    return (\n        <Container>\n            <Section>\n                <h1 className={s.title}>Телефонная книга</h1>\n                <ContactForm />\n                <h1 className={s.titleContact}>Контакты</h1>\n                <ContactFilter />\n                <ContactList />\n                <ContactStats/>\n            </Section>\n        </Container>\n    );\n    };\n\n\n\n\n\n\n\n\n\n\n\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\"\n\nimport actions from \"./actions\";\n\nconst INITIAL_CONTACTS_LIST = [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ];\n\n\n\nconst contacts = createReducer(INITIAL_CONTACTS_LIST,{\n    [actions.addContacts]:(state,{payload})=>[...state,payload],\n    [actions.deleteContacts]: (state,{payload})=>state.filter(contact=>contact.id !== payload)\n})\n\n\nconst filter = createReducer('',{\n    [actions.changeFilter]:(_,{payload})=>payload,\n})\nconst phonebookReducer = combineReducers({contacts,filter})\n\n\nexport default phonebookReducer","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {   \n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER, } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport phonebookReducer from './reducer';\nimport logger from 'redux-logger'\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  }}),\n  logger,\n];\n\nconst persistConfig={\n    key: 'contacts',\n    storage,\n    blacklist:[\"filter\"],\n}\n\n\nconst store = configureStore({\n    reducer:{\n    contacts:\n    persistReducer(\n        persistConfig,\n        phonebookReducer)\n    },\n    middleware,\n    devTools:process.env.NODE_ENV === 'development', \n});\n\nconst persistor = persistStore(store)\n\nexport  { store, persistor }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport {store,persistor} from './redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n      <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\",\"itemList\":\"ContactList_itemList__aagn6\",\"contactName\":\"ContactList_contactName__17so6\",\"contactNumber\":\"ContactList_contactNumber__6t0Z9\",\"contactDelete\":\"ContactList_contactDelete__2p2pS\"};"],"sourceRoot":""}